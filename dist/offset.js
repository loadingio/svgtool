// Generated by LiveScript 1.6.0
var svgtool;
if (typeof svgtool == 'undefined' || svgtool === null) {
  svgtool = {};
}
svgtool.offset = function(str, o){
  var cmd, obj, ret, _, add;
  o == null && (o = {});
  cmd = str.split(/(?=[MLHVCSQTAZ])/ig);
  obj = {
    ps: [],
    px: 0,
    py: 0
  };
  ret = [];
  _ = function(v){
    return v.toFixed(2).replace(/\.00$/, '');
  };
  add = function(l, s, d){
    return d.map(function(v, i){
      return _(l[s + i] + v);
    });
  };
  cmd.map(function(c){
    var cn, CN, rel, v, ref$, dx, dy, t, i$, to$, i, results$ = [], results1$ = [], results2$ = [], results3$ = [], results4$ = [];
    cn = c.substring(0, 1);
    CN = cn.toUpperCase();
    rel = cn !== CN;
    v = c.substring(1).split(/(?=[, -])/ig).map(function(it){
      return +it.trim().replace(/,/, '');
    });
    ret.push(cn);
    ref$ = rel
      ? [0, 0]
      : [o.dx, o.dy], dx = ref$[0], dy = ref$[1];
    switch (cn.toUpperCase()) {
    case 'H':
    case 'V':
      t = CN === 'H' ? 'x' : 'y';
      for (i$ = 0, to$ = v.length; i$ < to$; ++i$) {
        i = i$;
        results$.push(ret = ret.concat(add(v, i, d[t])));
      }
      return results$;
      break;
    case 'M':
    case 'L':
    case 'T':
      for (i$ = 0, to$ = v.length; i$ < to$; i$ += 2) {
        i = i$;
        results1$.push(ret = ret.concat(add(v, i, [dx, dy])));
      }
      return results1$;
      break;
    case 'S':
    case 'Q':
      for (i$ = 0, to$ = v.length; i$ < to$; i$ += 4) {
        i = i$;
        results2$.push(ret = ret.concat(add(v, i, [dx, dy, dx, dy])));
      }
      return results2$;
      break;
    case 'C':
      for (i$ = 0, to$ = v.length; i$ < to$; i$ += 6) {
        i = i$;
        results3$.push(ret = ret.concat(add(v, i, [dx, dy, dx, dy, dx, dy])));
      }
      return results3$;
      break;
    case 'A':
      for (i$ = 0, to$ = v.length; i$ < to$; i$ += 7) {
        i = i$;
        results4$.push(ret = ret.concat(add(v, i, [0, 0, 0, 0, 0, dx, dy])));
      }
      return results4$;
    }
  });
  ret = ret.join(' ').replace(/ *([ZMLTSQCAHV-]) */g, '$1').replace(/ +/, ' ');
  return ret;
};
if (typeof module != 'undefined' && module !== null) {
  module.exports = svgtool;
} else if (typeof window != 'undefined' && window !== null) {
  window.svgtool = svgtool;
}
